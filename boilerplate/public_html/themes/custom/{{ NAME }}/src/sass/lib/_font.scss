////
//// Functions and mixins related to fonts.
////

@use 'sass:map';
@use 'sass:math';
@use 'sass:list';
@use 'layout';
@use 'unit';
@use 'viewport';

// System font families.
//
// References:
// - https://markdotto.com/2018/02/07/github-system-fonts/ (GitHub sans-serif stack, Emoji stack)
// - https://systemfontstack.com/ (serif stack)
$_SYSTEM_EMOJI: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
$_SYSTEM_SANS_SERIF: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, $_SYSTEM_EMOJI;
$_SYSTEM_SERIF: 'Iowan Old Style', 'Apple Garamond', Baskerville, 'Times New Roman', 'Droid Serif', Times, 'Source Serif Pro', serif, $_SYSTEM_EMOJI;

$SANS_SERIF: $_SYSTEM_SANS_SERIF;

// List of font sizes that will have scalable custom properties
$_SIZE-PRESETS: (
  72: 30,
  60: 30,
  48: 30,
  36: 24,
  30: 24,
);

// Default font size.
$SIZE: 16;

// Global default line height ratio
$LINE-HEIGHT: (24 / $SIZE);

// Minimum font size for viewport scaling.
$_SIZE_MIN: 24;

/// Returns a minimum value to use for a particular font scale size.
///
/// @param {Number} $size
///   The unitless font size in pixels.
///
/// @return {Length.rem}
///   The minimum size for the given font size with rem units.
@function _scale_minimum($size) {
  @return unit.px_to_rem(
    unit.between(math.floor(($size + ($_SIZE_MIN * 16))/ 14), $_SIZE_MIN, $size)
  );
}

/// Outputs font size using fallback and variables.
///
/// @param {Number|Length.px} $size
///   The font size in pixels.
@mixin size($size) {
  $rem_size: unit.px_to_rem($size);

  // Fallback for custom properties or when size is too small to attempt to
  // scale.
  font-size: $rem_size;

  @if $size > $_SIZE_MIN {
    font-size: if(
      map.has_key($_SIZE_PRESETS, $size),
      var(--font-size-#{$size}),
      viewport.scale($rem-size, _scale_minimum($size))
    );
  }
}

/// Outputs custom properties for font size presets.
@mixin size-custom-properties {
  @each $size, $min in $_SIZE_PRESETS {
    --font-size-#{$size}: #{unit.px_to_rem($min)};

    @supports (top: min(0%, 1%)) {
      --font-size-#{$size}: #{viewport.scale(unit.px_to_rem($size), unit.px_to_rem($min))};
    }
  }
}
