/**
 * @file
 * Layout items in a grid.
 */

@use '../lib/layout';
@use '../lib/unit';
@use '../lib/viewport';

.l-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: (layout.$GUTTER_FALLBACK_PX * -0.5);

  @supports (display: grid) {
    display: grid;
    margin: 0;
    grid-template-columns: repeat(var(--columns), 1fr);
    grid-gap: var(--site-gutter);
    --columns: 1;
  }

  @mixin columns($width, $columns) {
    @for $i from 2 through $columns {
      @media (min-width: ($width + 20px) * ($i - 1)) {
        --columns: #{$i};
      }
    }

    > .l-grid__item {
      flex-basis: $width;
    }
  }

  &--thirds {
    @include columns(400px, 3);
  }

  // 1. When using fallback flexbox layout, ensures items are contained within
  //    the containing element.
  &__item {
    margin: (layout.$GUTTER_FALLBACK_PX * 0.5);
    min-width: 0; // 1
    flex-grow: 1;

    @supports (display: grid) {
      margin: 0;
    }
  }
}
