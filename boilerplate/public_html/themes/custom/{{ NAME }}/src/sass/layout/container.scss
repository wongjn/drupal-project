/**
 * Site width container.
 */

@import '../system';

$fallback-gutter: 20px;

// Site width container.
//
// 1. Add additional gutter width either side to compensate for padding.
.l-container {
	@include viewport-scale(--container-space-x, 40px, 10px, $SITE-WIDTH * 1vw);
	@include viewport-scale(--container-space-y, 40px, 10px, $SITE-WIDTH * 1vw);
	display: block;
	margin-right: auto;
	margin-left: auto;
	max-width: ($SITE-WIDTH-PX + ($fallback-gutter * 2)); // 1
	max-width: calc(#{$SITE-WIDTH-PX} + (var(--container-space-x) * 2)); // 1

	&,
	&__module {
		padding: ($fallback-gutter / 2);
		padding: calc(var(--container-space-y) / 2) calc(var(--container-space-x) / 2);
	}


	// Merges padding and module into the top level element, such that no __module
	// sub-components are required.
	&--module {
		padding: $fallback-gutter;
		padding: var(--container-space-y) var(--container-space-x);

		.l-container__module {
			padding: 0;
		}
	}

	&--wide {
		max-width: (1608px + ($fallback-gutter * 2));
		max-width: calc(1608px + (var(--container-space-x) * 2));
	}

	&--compact {
		@include viewport-scale(--container-space-x, 30px, 0, 1400vw);
		@include viewport-scale(--container-space-y, 30px, 0, 1400vw);
	}

	&__module {
		&--flush-y {
			margin-top: ($fallback-gutter * -0.5);
			margin-top: calc(var(--container-space-y) * -0.5);
			margin-bottom: ($fallback-gutter * -0.5);
			margin-bottom: calc(var(--container-space-y) * -0.5);
			padding-top: 0;
			padding-bottom: 0;
		}
	}
}
