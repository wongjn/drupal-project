/**
 * @file
 * CMS WYSIWYG-entered text.
 */

@use '../lib/colors';
@use '../lib/font';
@use '../lib/viewport';

.c-text-body {
  @include font.crop(font.$LINE-HEIGHT);
  $block-spacing: font.$LINE-HEIGHT * 1rem * ( font.$SIZE / 16 );

  &--no-text-crop {
    &::before,
    &::after {
      margin: 0;
    }
  }

  // Clearfix
  &::after {
    display: table;
    clear: both;
    content: '';
  }

  * + * {
    margin-top: $block-spacing;
  }

  ul,
  ol {
    padding-left: 3ch;
  }

  ul {
    list-style-type: disc;
  }

  ol {
    list-style-type: decimal;
  }

  li,
  br,
  img {
    margin-top: 0;
  }

  // Sizes for each header tags, 2â€“6
  $heading-sizes: (
    2: 30,
    3: 24,
    4: 18,
    5: 16,
    6: 16
  );
  @each $level, $size in $heading-sizes {
    h#{$level} {
      @include font.size($size);
    }
  }

  img {
    vertical-align: baseline;
    vertical-align: unset;
  }

  a {
    background: linear-gradient(0deg, currentColor, currentColor) no-repeat right bottom / 0 2px;
    transition: background-size 350ms;
    color: blue;

    &:hover {
      background-position-x: left;
      background-size: 100% 2px;
    }

    &:active {
      color: red;
    }
  }

  // WYSIWYG alignment classes.
  .align-left,
  .align-right {
    margin-right: 5px;
    margin-right: viewport.scale(20px, 5px);
    margin-left: 5px;
    margin-left: viewport.scale(20px, 5px);
  }

  &__media {
    &.align-left,
    &.align-right {
      @media (max-width: 1199px) {
        float: none;
        display: table;
        margin-right: auto;
        margin-left: auto;
      }

      @media (min-width: 1200px) {
        max-width: 50%;
      }
    }

    * + * {
      margin-top: 0;
    }

    // Remove bottom whitespace from default inline display.
    img {
      vertical-align: top;
    }

    // Anchor tags that wrap media items do not get margin-top (since they are
    // inline display). Add the margin onto the child media instead.
    a:not(:first-child) > & {
      margin-top: $block-spacing;
    }
  }

  &__emphasize {}
}
