/**
 * @file
 * Main site menu.
 */

@import '../system';

$line-height: 1.2;
$font-size: 16;
$y-padding: 10px;
$x-padding: 10px;

// 1. Set best-guessed height untill JS loaded to avoid content jump.
.c-main-menu {
  @include font-size($font-size);
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
  position: relative;
  z-index: 400;
  height: (($line-height * $font-size * 1px) + ($y-padding * 2)); // 1
  line-height: $line-height;
  text-transform: uppercase;

  &__link {
    display: block;
    padding: $y-padding $x-padding;

    &.is-active-trail {
      color: #000;
    }
  }

  // 1. Sub-menu position context
  &__top-menu,
  &__sub-menu {
    > li {
      position: relative; // 1
      z-index: 1;
    }
  }

  // 1. Layout box is still here when collapsed. This prevents unclickable
  //    elements underneath.
  &__top-menu {
    display: flex;
    justify-content: flex-end;
    flex-wrap: wrap;
    align-items: flex-start;
    flex: 0 1 auto;
    pointer-events: none; // 1


    > li {
      pointer-events: auto; // 1
    }
  }

  &__sub-menu {
    @mixin state($open: false) {
      @if $open {
        opacity: 1;
        pointer-events: auto;
        transform: none;
      } @else {
        opacity: 0;
        transform: translateY(10px);
      }
    };

    @include state;
    position: absolute;
    top: 100%;
    left: 0;
    z-index: -1;
    margin-right: -9999px;
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.3);
    background-color: pink;
    min-width: 100%;
    max-width: 250px;
    pointer-events: none;
    transition: opacity 250ms, transform 250ms;

    // Align to right side as JS detected it would otherwise fall outside the
    // viewport.
    &.is-moved {
      left: auto;
      right: 0;
      margin-right: 0;
      margin-left: -9999px;
    }

    // Hover helper when the menu is transitioning in
    &::before {
      position: absolute;
      left: 0;
      bottom: 100%;
      width: 100%;
      height: 10px;
      content: '';
    }

    li[aria-hidden="true"] & {
      display: none;
    }

    // Open child menu animations
    li.is-open > &,
    li:hover > & {
      @include state(true);
    }
    li:focus-within > & {
      @include state(true);
    }

    @media (hover: none) {
      li:hover:not(.is-open) > & {
        @include state;
      }
    }

    > li:not(:last-child) {
      border-bottom: 1px solid blue;
    }

    &--deep {
      top: 0;
      left: 100%;
      transform: translateX(10px);

      // Hover helper when the menu is transitioning in.
      &::before {
        top: 0;
        right: 100%;
        width: 10px;
        height: 100%;
      }

      // Move to left side as JS detected it would otherwise fall outside the
      // viewport.
      &.is-moved {
        left: auto;
        right: 100%;
        transform: translateX(-10px);

        &::before {
          left: 100%;
          right: auto;
        }
      }
    }
  }

  &__drawer {
    flex: 0 0 auto;
    align-self: center;
  }
}
