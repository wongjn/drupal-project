name: Build

on:
  push:
    # Ignore pushes to dependabot/** branches since these are guaranteed to have
    # pull requests into master. This avoids duplicate workflow runs.
    branches-ignore: dependabot/**
    paths-ignore:
      # Files in .github do not affect the build; only for GitHub interaction.
      - .github/**
      # Exception is workflows subdirectory, where this file sits.
      - '!.github/workflows/**'
      # Files in .vscode do not affect the build; for VSCode config only.
      - .vscode/**
  pull_request:
    branches: master
  workflow_dispatch:

env:
  # Theme name.
  THEME_NAME: {{ NAME }}
  # Node version to build theme assets with.
  NODE_VERSION: '12'
  # Deployment target.
  DEPLOY_TARGET: user@serverX.projectcosmic.co.uk:site.git

jobs:
  composer_build:
    runs-on: ubuntu-18.04
    # Skip entire workflow run with [skip ci] in latest commit message.
    if: '!contains(github.event.head_commit.message, ''[skip ci]'')'
    outputs:
      composer-cache-dir: ${{ steps.composer.outputs.dir }}
      composer-cache-key: ${{ steps.composer.outputs.key }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Composer v1
      id: composer
      run: |
        sudo update-alternatives --set php /usr/bin/php7.3
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php -r "if (hash_file('sha384', 'composer-setup.php') === file_get_contents('https://composer.github.io/installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
        php composer-setup.php --1
        echo "::set-output name=dir::$(php ./composer.phar config cache-dir)"
        echo "::set-output name=key::v1-composer-${{ hashFiles('composer.lock') }}"
    - uses: actions/cache@v2
      with:
        path: |
          ${{ steps.composer.outputs.dir }}
          vendor
          public_html/core
          public_html/libraries
          public_html/*/contrib
          composer.phar
        key: ${{ steps.composer.outputs.key }}
        restore-keys: v1-composer-
    - run: php ./composer.phar install --no-progress
  build_assets:
    runs-on: ubuntu-18.04
    needs: composer_build
    # Run job on push or npm dependabot pull requests.
    if: |
      (github.event_name != 'pull_request' || startsWith(github.head_ref, 'dependabot/npm_and_yarn/'))
      && !contains(github.event.head_commit.message, '[skip assets]')
    steps:
    - uses: actions/checkout@v2
    - name: Composer cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ needs.composer_build.outputs.composer-cache-dir }}
          vendor
          public_html/core
          public_html/libraries
          public_html/*/contrib
          composer.phar
        key: ${{ needs.composer_build.outputs.composer-cache-key }}
        restore-keys: v1-composer-
    - uses: actions/setup-node@v2
      with: { node-version: '${{ env.NODE_VERSION }}' }
    - name: NPM cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          public_html/themes/custom/*/node_modules
        key: v1-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: v1-npm-
    - run: npm install && npm run build
      working-directory: public_html/themes/custom/${{ env.THEME_NAME }}
    - uses: actions/upload-artifact@v2
      with:
        name: assets
        path: public_html/themes/custom/${{ env.THEME_NAME }}/dist
  code_style:
    runs-on: ubuntu-18.04
    needs: composer_build
    # Run job only on push, since we only expect human-written code in pushes
    # and not in pull requests.
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip tests]')
    steps:
    - uses: actions/checkout@v2
    - name: Composer cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ needs.composer_build.outputs.composer-cache-dir }}
          vendor
          public_html/core
          public_html/libraries
          public_html/*/contrib
          composer.phar
        key: ${{ needs.composer_build.outputs.composer-cache-key }}
        restore-keys: v1-composer-
    - run: ./vendor/bin/phpcs --runtime-set ignore_warnings_on_exit 1 --report-full
  php_unit:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix: { type: ['themes', 'modules'] }
    env:
      SIMPLETEST_DB: mysql://root:root@127.0.0.1/tests
      SIMPLETEST_BASE_URL: http://localhost:8888
      BROWSERTEST_OUTPUT_DIRECTORY: sites/simpletest/browser_output
    needs: composer_build
    # Run job on push or composer dependabot pull requests.
    if: |
      (github.event_name != 'pull_request' || startsWith(github.head_ref, 'dependabot/composer/'))
      && !contains(github.event.head_commit.message, '[skip tests]')
    steps:
    - uses: actions/checkout@v2
    - name: Composer cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ needs.composer_build.outputs.composer-cache-dir }}
          vendor
          public_html/core
          public_html/libraries
          public_html/*/contrib
          composer.phar
        key: ${{ needs.composer_build.outputs.composer-cache-key }}
        restore-keys: v1-composer-
    - name: Set up and run PHPUnit
      run: |
        sudo systemctl start mysql.service
        mysql -u root -proot -e 'create database tests'
        sudo update-alternatives --set php /usr/bin/php7.3
        php ./composer.phar drupal:scaffold --quiet
        cd public_html
        cp core/assets/scaffold/files/ht.router.php .ht.router.php
        php -S localhost:8888 .ht.router.php >& /dev/null &
        mkdir -p sites/simpletest/browser_output
        ../vendor/bin/phpunit -c core ${{ matrix.type }}/custom
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: ${{ matrix.type }}-test-browser-output
        path: public_html/sites/simpletest/browser_output
  # deploy:
  #   runs-on: self-hosted
  #   needs: [composer_build, build_assets, code_style, php_unit]
  #   # Run job only on main branch, allowing some skipped jobs but no failures or
  #   # cancellations.
  #   if: |
  #     github.ref == 'refs/heads/master'
  #     && !cancelled()
  #     && needs.composer_build.result == 'success'
  #     && needs.build_assets.result != 'failure'
  #     && needs.code_style.result != 'failure'
  #     && needs.php_unit.result != 'failure'
  #   steps:
  #   - uses: actions/checkout@v2
  #     with: { fetch-depth: 0 }
  #   - name: Composer cache
  #     uses: actions/cache@v2
  #     with:
  #       path: |
  #         vendor
  #         public_html/core
  #         public_html/libraries
  #         public_html/*/contrib
  #       key: ${{ needs.composer_build.outputs.composer-cache-key }}
  #       restore-keys: v1-composer-
  #   - uses: actions/download-artifact@v2
  #     if: '!contains(github.event.head_commit.message, ''[skip assets]'')'
  #     with:
  #       name: assets
  #       path: public_html/themes/custom/${{ env.THEME_NAME }}/dist
  #   - run: composer install
  #   - name: Query for any uninstalled Drupal extensions
  #     id: uninstall
  #     run: echo "::set-output name=extensions::`sed -E 's/[[:space:]]*(.+):.+/\1/' <(comm -13 <(sort config/sync/core.extension.yml) <(git show ${{ github.event.before }}:config/sync/core.extension.yml | sort))`"
  #   - name: Uninstall removed Drupal extensions
  #     if: steps.uninstall.extensions != ''
  #     run: ./vendor/bin/drush @live pm:uninstall ${{ steps.uninstall.extensions }}
  #   - name: Deploy built assets
  #     if: '!contains(github.event.head_commit.message, ''[skip assets]'')'
  #     run: dir=themes/custom/${{ env.THEME_NAME }}/dist/; ./vendor/bin/drush rsync @self:$dir @live:$dir --mode=rcmz -- --delete --exclude='*.map' --chmod="Fgo-wx,Dgo-w"
  #   - name: Deploy checked-in code
  #     run: |
  #       git push ${{ env.DEPLOY_TARGET }} master -f
  #       ./vendor/bin/drush @live deploy
